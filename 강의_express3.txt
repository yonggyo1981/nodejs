1. nunjucks 
   1) 레이아웃 템플릿 - 공통 부분을 정의, 변경될 부분 정의
   
		변경될 부분 정의 

		{% block 블록명칭 %}
		변경이 될 수 있는 부분을 정의 
		{% endblock %}
		
		템플릿 불러오기 
		{% extends '레이아웃 템플릿 경로' %}

    2) 출력 
		{{ 변수 }}  - 텍스트 형태로만 출력
		{{ 변수 | safe }} - HTML 출력 가능 
    
	
	3) 변수 
		{% set 변수명 = '값' %}
		값 - 문자, 숫자, 배열

	4) 반복문
	  {% for item in items %}
		// loop.index -> 반복되는 요소의 1부터 시작하는 인덱스
		
	  {% endfor %}
	
	5) 조건문
		{% if 조건식 %}
		
		{% elif 조건식 %}
		
		{% else %}
		
		{% endif %}
	
	6) 간단한 조건식 출력 
		{{ '참일때' if 조건식 }}
		{{ '참일때' if 조건식 else '거짓일때' }}
     
	7) 템플릿 파일 추가 
		{% include '템플릿 파일 경로' %}
   
    8) 전역 템플릿 변수 
		일반적인 방식 
		render시 데이터를 넘기는 방식 
			- res.render("템플릿 경로", 데이터)
	
	    res.locals 의 하위 속성으로 지정 -> 템플릿 전역 변수 
		- 따로 render에 넘겨줄 필요 X
	 
2. 개발환경, 
    (development)
	nodemon 
	
	서비스 환경 (production)
	cross-env 
		- dotenv는 dotenv.config()를 호출 했을때 .env -> process.env에 추가 
		- 호출하지 않으면?... 환경변수가 유지 되지 X
		
		- 서버 시작시 환경 변수를 추가 -> 전역에 유지
		- 개발 중, 서비 중인지 구분하는 환경변수 -> 전역 유지 필요
		  process.env.NODE_ENV 
						  - developement - 개발 중
						  - production - 서비스 중 
		
	    - 실제 서비스 환경에서만 적용
			(nodemon에서는 적용 X)
			(pm2 환경에서만 적용 O)
			
	pm2
		- 백그라운드에서 실행 
		- node.js 쓰레드가 1개  - 쓰레드가 죽게 되면 -> 서버 다운 
		- 쓰레드가 종료 -> 다시 재실행
		
		npm i pm2 // npm i -g pm2 -> 전역 설치 pm2
		npx -> node_modules에 설치된 명령어를 실행
		npx pm2
					- start 앱 파명 -> 시작 
					- stop  앱아이디|앱이름|all
					- restart 앱아이디|앱이름|all
					- reload 앱아이디|앱이름|all
					- delete 앱아이디|앱이름|all
					- monit -> 앱이 동작을 모니터링
		
	winston
	